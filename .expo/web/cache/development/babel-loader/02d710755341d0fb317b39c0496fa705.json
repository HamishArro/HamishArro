{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"gl\", \"canvas\", \"pixelRatio\", \"clearColor\", \"width\", \"height\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport THREE from \"./Three\";\n\nvar Renderer = function (_THREE$WebGLRenderer) {\n  _inherits(Renderer, _THREE$WebGLRenderer);\n\n  var _super = _createSuper(Renderer);\n\n  function Renderer(_ref) {\n    var _this;\n\n    var context = _ref.gl,\n        canvas = _ref.canvas,\n        _ref$pixelRatio = _ref.pixelRatio,\n        pixelRatio = _ref$pixelRatio === void 0 ? 1 : _ref$pixelRatio,\n        clearColor = _ref.clearColor,\n        width = _ref.width,\n        height = _ref.height,\n        props = _objectWithoutProperties(_ref, _excluded);\n\n    _classCallCheck(this, Renderer);\n\n    var inputCanvas = canvas || {\n      width: context.drawingBufferWidth,\n      height: context.drawingBufferHeight,\n      style: {},\n      addEventListener: function addEventListener() {},\n      removeEventListener: function removeEventListener() {},\n      clientHeight: context.drawingBufferHeight\n    };\n    _this = _super.call(this, _objectSpread({\n      canvas: inputCanvas,\n      context: context\n    }, props));\n\n    _this.setPixelRatio(pixelRatio);\n\n    if (width && height) {\n      _this.setSize(width, height);\n    }\n\n    if (clearColor) {\n      _this.setClearColor(clearColor);\n    }\n\n    return _this;\n  }\n\n  return Renderer;\n}(THREE.WebGLRenderer);\n\nexport { Renderer as default };","map":{"version":3,"sources":["../src/Renderer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAP;;IAUqB,Q;;;;;AACnB,0BAQgB;AAAA;;AAAA,QAPV,OAOU,QAPd,EAOc;AAAA,QANd,MAMc,QANd,MAMc;AAAA,+BALd,UAKc;AAAA,QALd,UAKc,gCALD,CAKC;AAAA,QAJd,UAIc,QAJd,UAIc;AAAA,QAHd,KAGc,QAHd,KAGc;AAAA,QAFd,MAEc,QAFd,MAEc;AAAA,QADX,KACW;;AAAA;;AACd,QAAM,WAAW,GACf,MAAM,IACL;AACC,MAAA,KAAK,EAAE,OAAO,CAAC,kBADhB;AAEC,MAAA,MAAM,EAAE,OAAO,CAAC,mBAFjB;AAGC,MAAA,KAAK,EAAE,EAHR;AAIC,MAAA,gBAAgB,EAAG,4BAAK,CAAG,CAJ5B;AAKC,MAAA,mBAAmB,EAAG,+BAAK,CAAG,CAL/B;AAMC,MAAA,YAAY,EAAE,OAAO,CAAC;AANvB,KAFH;AAWA;AACE,MAAA,MAAM,EAAE,WADV;AAEE,MAAA,OAAO,EAAP;AAFF,OAGK,KAHL;;AAMA,UAAK,aAAL,CAAmB,UAAnB;;AAEA,QAAI,KAAK,IAAI,MAAb,EAAqB;AACnB,YAAK,OAAL,CAAa,KAAb,EAAoB,MAApB;AACD;;AACD,QAAI,UAAJ,EAAgB;AAEd,YAAK,aAAL,CAAmB,UAAnB;AACD;;AA1Ba;AA2Bf;;;EApCmC,KAAK,CAAC,a;;SAAvB,Q","sourcesContent":["import THREE from './Three';\n\ntype RendererProps = THREE.WebGLRendererParameters & {\n  gl: WebGLRenderingContext;\n  canvas?: HTMLCanvasElement;\n  pixelRatio?: number;\n  clearColor?: THREE.Color | string | number;\n  width?: number;\n  height?: number;\n};\nexport default class Renderer extends THREE.WebGLRenderer {\n  constructor({\n    gl: context,\n    canvas,\n    pixelRatio = 1,\n    clearColor,\n    width,\n    height,\n    ...props\n  }: RendererProps) {\n    const inputCanvas =\n      canvas ||\n      ({\n        width: context.drawingBufferWidth,\n        height: context.drawingBufferHeight,\n        style: {},\n        addEventListener: (() => {}) as any,\n        removeEventListener: (() => {}) as any,\n        clientHeight: context.drawingBufferHeight,\n      } as HTMLCanvasElement);\n\n    super({\n      canvas: inputCanvas,\n      context,\n      ...props,\n    });\n\n    this.setPixelRatio(pixelRatio);\n\n    if (width && height) {\n      this.setSize(width, height);\n    }\n    if (clearColor) {\n      // @ts-ignore: Type 'string' is not assignable to type 'number'.ts(2345)\n      this.setClearColor(clearColor);\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
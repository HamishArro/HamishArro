{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport TextureLoader from \"../TextureLoader\";\nexport function loadTextureAsync(_ref) {\n  var asset;\n  return _regeneratorRuntime.async(function loadTextureAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          asset = _ref.asset;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            return new TextureLoader().load(asset, resolve, undefined, reject);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../../src/loaders/loadTextureAsync.ts"],"names":[],"mappings":";AAAA,OAAO,aAAP;AAEA,OAAO,SAAe,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC,UAAA,KAAlC,QAAkC,KAAlC;AAAA,2CACE,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV;AAAA,mBACjB,IAAI,aAAJ,GAAoB,IAApB,CAAyB,KAAzB,EAAgC,OAAhC,EAAyC,SAAzC,EAAoD,MAApD,CADiB;AAAA,WAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import TextureLoader from '../TextureLoader';\n\nexport async function loadTextureAsync({ asset }): Promise<any> {\n  return new Promise((resolve, reject) =>\n    new TextureLoader().load(asset, resolve, undefined, reject)\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
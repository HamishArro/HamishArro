{"ast":null,"code":"var _jsxFileName = \"/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/HamishArro/App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport * as React from \"react\";\nimport { ExpoWebGLRenderingContext, GLView } from \"expo-gl\";\nimport { Renderer, THREE } from \"expo-three\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Asset } from \"expo-asset\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nexport default function App() {\n  return React.createElement(GLView, {\n    style: {\n      width: 300,\n      height: 300\n    },\n    onContextCreate: onContextCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction onContextCreate(gl) {\n  var renderer = new Renderer({\n    gl: gl\n  });\n  renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n  var scene = new THREE.Scene();\n  var asset = Asset.fromModule(require(\"./models/eyeball/eyeball.obj\"));\n  asset.downloadAsync();\n  var loader = new OBJLoader();\n  loader.load(asset.localUri, function (object) {\n    scene.add(object);\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/HamishArro/App.js"],"names":["StatusBar","React","ExpoWebGLRenderingContext","GLView","Renderer","THREE","Asset","OBJLoader","App","width","height","onContextCreate","gl","renderer","setSize","drawingBufferWidth","drawingBufferHeight","scene","Scene","asset","fromModule","require","downloadAsync","loader","load","localUri","object","add","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,yBAAT,EAAoCC,MAApC,QAAkD,SAAlD;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,YAAhC;;;;AAEA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;AAE3B,MAAMC,QAAQ,GAAG,IAAIT,QAAJ,CAAa;AAAEQ,IAAAA,EAAE,EAAFA;AAAF,GAAb,CAAjB;AACAC,EAAAA,QAAQ,CAACC,OAAT,CAAiBF,EAAE,CAACG,kBAApB,EAAwCH,EAAE,CAACI,mBAA3C;AAEA,MAAMC,KAAK,GAAG,IAAIZ,KAAK,CAACa,KAAV,EAAd;AAEA,MAAMC,KAAK,GAAGb,KAAK,CAACc,UAAN,CAAiBC,OAAO,gCAAxB,CAAd;AAEAF,EAAAA,KAAK,CAACG,aAAN;AAEA,MAAMC,MAAM,GAAG,IAAIhB,SAAJ,EAAf;AACAgB,EAAAA,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACM,QAAlB,EAA4B,UAAUC,MAAV,EAAkB;AAC5CT,IAAAA,KAAK,CAACU,GAAN,CAAUD,MAAV;AACD,GAFD;AAGD;;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport * as React from \"react\";\nimport { ExpoWebGLRenderingContext, GLView } from \"expo-gl\";\nimport { Renderer, THREE } from \"expo-three\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Asset } from \"expo-asset\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nexport default function App() {\n  return (\n    <GLView\n      style={{ width: 300, height: 300 }}\n      onContextCreate={onContextCreate}\n    />\n  );\n}\n\nfunction onContextCreate(gl) {\n  // Create a WebGLRenderer without a DOM element\n  const renderer = new Renderer({ gl });\n  renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n  const scene = new THREE.Scene();\n\n  const asset = Asset.fromModule(require(\"./models/eyeball/eyeball.obj\"));\n\n  asset.downloadAsync();\n\n  const loader = new OBJLoader();\n  loader.load(asset.localUri, function (object) {\n    scene.add(object);\n  });\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
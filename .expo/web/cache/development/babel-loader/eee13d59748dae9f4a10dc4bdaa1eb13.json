{"ast":null,"code":"export default function parseAssetCallback(assetName, callbackOrDictionary) {\n  if (typeof callbackOrDictionary === 'function') {\n    return callbackOrDictionary(assetName);\n  } else if (callbackOrDictionary !== null && typeof callbackOrDictionary === 'object') {\n    if (assetName in callbackOrDictionary) {\n      return callbackOrDictionary[assetName];\n    }\n\n    throw new Error(\"parseAssetCallback: object doesn't contain key: \" + assetName);\n  }\n\n  throw new Error('parseAssetCallback: prop `callbackOrDictionary` must be a function or object');\n}","map":{"version":3,"sources":["../../src/loaders/parseAssetCallback.ts"],"names":[],"mappings":"AAGA,eAAc,SAAU,kBAAV,CACZ,SADY,EAEZ,oBAFY,EAEiC;AAE7C,MAAI,OAAO,oBAAP,KAAgC,UAApC,EAAgD;AAC9C,WAAQ,oBAAoC,CAAC,SAAD,CAA5C;AACD,GAFD,MAEO,IACL,oBAAoB,KAAK,IAAzB,IACA,OAAO,oBAAP,KAAgC,QAF3B,EAGL;AACA,QAAI,SAAS,IAAI,oBAAjB,EAAuC;AACrC,aAAO,oBAAoB,CAAC,SAAD,CAA3B;AACD;;AAED,UAAM,IAAI,KAAJ,sDAC+C,SAD/C,CAAN;AAGD;;AAED,QAAM,IAAI,KAAJ,CACJ,8EADI,CAAN;AAGD","sourcesContent":["type AnyFunction = (...args: any[]) => any;\ntype AnyObject = { [key: string]: any };\n\nexport default function parseAssetCallback(\n  assetName: string,\n  callbackOrDictionary: AnyFunction | AnyObject\n): any {\n  if (typeof callbackOrDictionary === 'function') {\n    return (callbackOrDictionary as AnyFunction)(assetName);\n  } else if (\n    callbackOrDictionary !== null &&\n    typeof callbackOrDictionary === 'object'\n  ) {\n    if (assetName in callbackOrDictionary) {\n      return callbackOrDictionary[assetName];\n    }\n\n    throw new Error(\n      `parseAssetCallback: object doesn't contain key: ${assetName}`\n    );\n  }\n\n  throw new Error(\n    'parseAssetCallback: prop `callbackOrDictionary` must be a function or object'\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
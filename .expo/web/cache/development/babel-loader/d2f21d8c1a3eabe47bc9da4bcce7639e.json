{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction resolveAsset(fileReference) {\n  var urls, _iterator, _step, file;\n\n  return _regeneratorRuntime.async(function resolveAsset$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          urls = [];\n\n          if (Array.isArray(fileReference)) {\n            for (_iterator = _createForOfIteratorHelperLoose(fileReference); !(_step = _iterator()).done;) {\n              file = _step.value;\n              urls.push(file);\n            }\n          } else {\n            urls.push(fileReference);\n          }\n\n          return _context.abrupt(\"return\", urls);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport function stringFromAsset(asset) {\n  return _regeneratorRuntime.async(function stringFromAsset$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.warn('ExpoTHREE.stringFromAsset: Not Implemented');\n          return _context2.abrupt(\"return\", '');\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport default resolveAsset;","map":{"version":3,"sources":["../src/resolveAsset.ts"],"names":[],"mappings":";;;;;;;;AACA,SAAe,YAAf,CAA4B,aAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACM,UAAA,IADN,GACoB,EADpB;;AAEE,cAAI,KAAK,CAAC,OAAN,CAAc,aAAd,CAAJ,EAAkC;AAChC,6DAAiB,aAAjB,iCAAgC;AAAvB,cAAA,IAAuB;AAC9B,cAAA,IAAI,CAAC,IAAL,CAAU,IAAV;AACD;AACF,WAJD,MAIO;AACL,YAAA,IAAI,CAAC,IAAL,CAAU,aAAV;AACD;;AARH,2CASS,IATT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYA,OAAO,SAAe,eAAf,CAA+B,KAA/B;AAAA;AAAA;AAAA;AAAA;AACL,UAAA,OAAO,CAAC,IAAR,CAAa,4CAAb;AADK,4CAEE,EAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,eAAe,YAAf","sourcesContent":["// Also not implemented\nasync function resolveAsset(fileReference): Promise<any[]> {\n  let urls: any[] = [];\n  if (Array.isArray(fileReference)) {\n    for (let file of fileReference) {\n      urls.push(file);\n    }\n  } else {\n    urls.push(fileReference);\n  }\n  return urls;\n}\n\nexport async function stringFromAsset(asset): Promise<string> {\n  console.warn('ExpoTHREE.stringFromAsset: Not Implemented');\n  return '';\n}\n\nexport default resolveAsset;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
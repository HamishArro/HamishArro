{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport CubeTexture from \"./CubeTexture\";\nexport default function loadCubeTextureAsync(options) {\n  var texture;\n  return _regeneratorRuntime.async(function loadCubeTextureAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          texture = new CubeTexture();\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(texture.loadAsync(options));\n\n        case 3:\n          return _context.abrupt(\"return\", texture);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/loadCubeTextureAsync.ts"],"names":[],"mappings":";AAAA,OAAO,WAAP;AAEA,eAAe,SAAe,oBAAf,CAAoC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAIP,UAAA,OAJO,GAIG,IAAI,WAAJ,EAJH;AAAA;AAAA,2CAKP,OAAO,CAAC,SAAR,CAAkB,OAAlB,CALO;;AAAA;AAAA,2CAMN,OANM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import CubeTexture from './CubeTexture';\n\nexport default async function loadCubeTextureAsync(options: {\n  assetForDirection;\n  directions?: string[];\n}): Promise<CubeTexture> {\n  const texture = new CubeTexture();\n  await texture.loadAsync(options);\n  return texture;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/HamishArro/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport * as React from \"react\";\nimport { ExpoWebGLRenderingContext, GLView } from \"expo-gl\";\nimport * as THREE from \"three\";\nimport { Renderer } from \"expo-three\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Asset } from \"expo-asset\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nexport default function App() {\n  return React.createElement(GLView, {\n    style: {\n      width: 300,\n      height: 300\n    },\n    onContextCreate: onContextCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction onContextCreate(gl) {\n  var camera = new THREE.PerspectiveCamera(75, gl.drawingBufferWidth / gl.drawingBufferHeight, 0.1, 1000);\n  var renderer = ExpoTHREE.createRenderer(gl);\n  renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n  var asset = Asset.fromModule(require(\"./models/eyeball/eyeball.obj\"));\n\n  function asyncCall() {\n    var loader;\n    return _regeneratorRuntime.async(function asyncCall$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(asset.downloadAsync());\n\n          case 2:\n            loader = new OBJLoader();\n            loader.load(asset.localUri, function (object) {\n              scene.add(object);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/hamisharro/Documents/Projects/My Portfolio/JavaScript/HamishArro/App.js"],"names":["StatusBar","React","ExpoWebGLRenderingContext","GLView","THREE","Renderer","Asset","OBJLoader","App","width","height","onContextCreate","gl","camera","PerspectiveCamera","drawingBufferWidth","drawingBufferHeight","renderer","ExpoTHREE","createRenderer","setSize","asset","fromModule","require","asyncCall","downloadAsync","loader","load","localUri","object","scene","add","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,yBAAT,EAAoCC,MAApC,QAAkD,SAAlD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,YAAzB;;;;AAEA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,sCAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KADT;AAEE,IAAA,eAAe,EAAEC,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AAED,SAASA,eAAT,CAAyBC,EAAzB,EAA6B;AAE3B,MAAMC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAV,CACb,EADa,EAEbF,EAAE,CAACG,kBAAH,GAAwBH,EAAE,CAACI,mBAFd,EAGb,GAHa,EAIb,IAJa,CAAf;AAMA,MAAMC,QAAQ,GAAGC,SAAS,CAACC,cAAV,CAAyBP,EAAzB,CAAjB;AACAK,EAAAA,QAAQ,CAACG,OAAT,CAAiBR,EAAE,CAACG,kBAApB,EAAwCH,EAAE,CAACI,mBAA3C;AAEA,MAAMK,KAAK,GAAGf,KAAK,CAACgB,UAAN,CAAiBC,OAAO,gCAAxB,CAAd;;AAEA,WAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACQH,KAAK,CAACI,aAAN,EADR;;AAAA;AAEQC,YAAAA,MAFR,GAEiB,IAAInB,SAAJ,EAFjB;AAGEmB,YAAAA,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,QAAlB,EAA4B,UAAUC,MAAV,EAAkB;AAC5CC,cAAAA,KAAK,CAACC,GAAN,CAAUF,MAAV;AACD,aAFD;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD;;AAED,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport * as React from \"react\";\nimport { ExpoWebGLRenderingContext, GLView } from \"expo-gl\";\nimport * as THREE from \"three\";\nimport { Renderer } from \"expo-three\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Asset } from \"expo-asset\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nexport default function App() {\n  return (\n    <GLView\n      style={{ width: 300, height: 300 }}\n      onContextCreate={onContextCreate}\n    />\n  );\n}\n\nfunction onContextCreate(gl) {\n  // Create a WebGLRenderer without a DOM element\n  const camera = new THREE.PerspectiveCamera(\n    75,\n    gl.drawingBufferWidth / gl.drawingBufferHeight,\n    0.1,\n    1000\n  );\n  const renderer = ExpoTHREE.createRenderer(gl);\n  renderer.setSize(gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n  const asset = Asset.fromModule(require(\"./models/eyeball/eyeball.obj\"));\n\n  async function asyncCall() {\n    await asset.downloadAsync();\n    const loader = new OBJLoader();\n    loader.load(asset.localUri, function (object) {\n      scene.add(object);\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
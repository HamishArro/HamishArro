{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"pointerEvents\", \"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Platform } from '@unimodules/core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n}\n\nfunction setRef(refProp, ref) {\n  if (!refProp) return;\n\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    refProp.current = ref;\n  }\n}\n\nvar Canvas = React.forwardRef(function (props, ref) {\n  return createElement('canvas', _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref\n  }));\n});\n\nvar CanvasWrapper = function CanvasWrapper(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      size = _React$useState2[0],\n      setSize = _React$useState2[1];\n\n  var ref = React.useRef(null);\n\n  var _canvasRef = React.useRef(null);\n\n  function updateCanvasSize() {\n    var canvas = _canvasRef.current;\n\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      var _size = getSize();\n\n      var scale = PixelRatio.get();\n      canvas.style.width = _size.width + \"px\";\n      canvas.style.height = _size.height + \"px\";\n      canvas.width = _size.width * scale;\n      canvas.height = _size.height * scale;\n    }\n  }\n\n  function getSize() {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n\n    var element = getElement(ref.current);\n    var _element$offsetWidth = element.offsetWidth,\n        width = _element$offsetWidth === void 0 ? 0 : _element$offsetWidth,\n        _element$offsetHeight = element.offsetHeight,\n        height = _element$offsetHeight === void 0 ? 0 : _element$offsetHeight;\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  function onLayout(event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height;\n\n    if (width !== (size == null ? void 0 : size.width) || height !== size.height) {\n      setSize({\n        width: width,\n        height: height\n      });\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }\n\n  React.useEffect(function () {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n  React.useEffect(function () {\n    updateCanvasSize();\n  }, [size]);\n  React.useEffect(function () {\n    var canvas = _canvasRef.current;\n\n    if (canvas) {\n      updateCanvasSize();\n    }\n\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n  return React.createElement(View, _extends({}, props, {\n    pointerEvents: \"box-none\",\n    ref: ref,\n    onLayout: onLayout\n  }), React.createElement(Canvas, {\n    ref: _canvasRef,\n    pointerEvents: pointerEvents,\n    style: StyleSheet.absoluteFill\n  }), children);\n};\n\nexport default CanvasWrapper;","map":{"version":3,"sources":["../src/Canvas.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from '@unimodules/core';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { LayoutChangeEvent, PixelRatio, StyleSheet, View, ViewProps } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nfunction getElement(component) {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n}\n\nfunction setRef<T>(refProp: React.Ref<T>, ref: T | null) {\n  if (!refProp) return;\n\n  if (typeof refProp === 'function') {\n    refProp(ref);\n  } else if ('current' in refProp) {\n    // @ts-ignore\n    refProp.current = ref;\n  }\n}\n\nconst Canvas = React.forwardRef(\n  (props: React.ComponentProps<typeof View>, ref: React.Ref<HTMLCanvasElement>) =>\n    createElement('canvas', { ...props, ref })\n);\n\nconst CanvasWrapper: React.FunctionComponent<ViewProps & {\n  canvasRef: React.Ref<HTMLCanvasElement>;\n}> = ({ pointerEvents, children, ...props }) => {\n  const [size, setSize] = React.useState<{ width: number; height: number } | null>(null);\n\n  const ref = React.useRef<View>(null);\n  const _canvasRef = React.useRef<HTMLCanvasElement>(null);\n\n  function updateCanvasSize(): void {\n    const canvas = _canvasRef.current;\n    // eslint-disable-next-line no-undef\n    if (typeof HTMLCanvasElement !== 'undefined' && canvas instanceof HTMLCanvasElement) {\n      const size = getSize();\n      const scale = PixelRatio.get();\n\n      canvas.style.width = `${size.width}px`;\n      canvas.style.height = `${size.height}px`;\n\n      canvas.width = size.width * scale;\n      canvas.height = size.height * scale;\n    }\n  }\n\n  function getSize(): { width: number; height: number } {\n    if (size) {\n      return size;\n    } else if (!ref.current || !Platform.isDOMAvailable) {\n      return { width: 0, height: 0 };\n    }\n    const element = getElement(ref.current);\n    const { offsetWidth: width = 0, offsetHeight: height = 0 } = element;\n    return { width, height };\n  }\n\n  function onLayout(event: LayoutChangeEvent): void {\n    const {\n      nativeEvent: {\n        layout: { width, height },\n      },\n    } = event;\n\n    if (width !== size?.width || height !== size.height) {\n      setSize({ width, height });\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    if (ref.current != null) {\n      setSize(getSize());\n    }\n  }, [ref]);\n\n  React.useEffect(() => {\n    updateCanvasSize();\n  }, [size]);\n\n  React.useEffect(() => {\n    const canvas = _canvasRef.current;\n    if (canvas) {\n      updateCanvasSize();\n    }\n    setRef(props.canvasRef, canvas);\n  }, [_canvasRef]);\n\n  return (\n    <View {...props} pointerEvents=\"box-none\" ref={ref} onLayout={onLayout}>\n      <Canvas ref={_canvasRef} pointerEvents={pointerEvents} style={StyleSheet.absoluteFill} />\n      {children}\n    </View>\n  );\n};\n\nexport default CanvasWrapper;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}